#!/sbin/sh

ver=
tmp=/tmp/mipay-apps
default_prop=/system/build.prop
imgroot=

if [ "$3" ]; then
    zip=$3
    console=/proc/$$/fd/$2
    # write the location of the console buffer to /tmp/console for other scripts to use
    echo "$console" > /tmp/console
else
    console=$(cat /tmp/console)
    [ "$console" ] || console=/proc/$$/fd/1
fi

print() {
    if [ "$1" ]; then
        echo "ui_print $1" > "$console"
    else
        echo "ui_print  " > "$console"
    fi
    echo
}

abort() {
    [ "$1" ] && {
        print "Error: $1"
        print "Aborting..."
    }
    cleanup
    print "Failed to install mipay addons!"
    exit 1
}

cleanup() {
    [ "$zip" ] && rm /tmp/console
    [ -d "$tmp" ] && rm -rf "$tmp"
}

extract() {
    rm -rf "$2"
    mkdir -p "$2"
    unzip -o "$1" -d "$2" || abort "Failed to extract zip to $2!"
}

setperm() {
    find "$3" -type d -exec chmod "$1" {} \;
    find "$3" -type f -exec chmod "$2" {} \;
}

setprop() {
    if ! [ -f "$default_prop" ]; then
        default_prop="${imgroot}${default_prop}"
    fi
    if ! [ -f "$default_prop" ]; then
        abort "build.prop not found."
    fi
    if grep -q "^[[:space:]]*$1[[:space:]]*=" "$default_prop"; then
        sed -i "s/^[[:space:]]*$1[[:space:]]*=.*$/$1=$2/g" "$default_prop"
    else
        echo "$1=$2" >> "$default_prop"
    fi
}

rmcache() {
    f="$1"
    [ -d /data/dalvik-cache/ ] || return 0
    app="$(echo $f | tr / @ | cut -c2-)"
    [ -z "$app" ] && return 0
    app="${app}@"
    find /data/dalvik-cache/ -iname "${app}*" |
        while read i; do
            j="$(basename $i)"
            print "Clean cache: ${j/${app}/}"
            rm -f "$i"
        done
}

# from magisk util_functions.sh
getprop() {
  local REGEX="s/^$1=//p"
  shift
  local FILES=$@
  [ -z "$FILES" ] && FILES='/system/build.prop'
  sed -n "$REGEX" $FILES 2>/dev/null | head -n 1
}

setup_mntpoint() {
  local POINT=$1
  [ -L $POINT ] && mv -f $POINT ${POINT}_link
  if [ ! -d $POINT ]; then
    rm -f $POINT
    mkdir -p $POINT
  fi
}

umount_mntpoint() {
    local POINT=$1
    if [ -L "${POINT}_link" ]; then
      rm -rf $POINT
      mv -f ${POINT}_link $POINT
    fi
}

print "**************************"
print "* MIUI 9/10 MiPay Addons *"
print "**************************"
print "by @linusyang"
print "version: $ver"

print "Mounting filesystems..."
if [ ! -f /system/build.prop ]; then
    setup_mntpoint /system
    sysEvent=$(grep -l system /sys/dev/block/*/uevent)
    blkId=$(getprop DEVNAME $sysEvent)
    mount -o rw /dev/block/${blkId} /system
    print 'Remount as read-write...'
fi

[ "$zip" ] && {
    extract "$zip" "$tmp"
}
cd "$tmp"

if [ -d "/system/system/app" ]; then
    print 'New image structure detected.'
    imgroot=/system
fi

app_list=""
for f in ./system/app/*; do
    app_list="${app_list} ${imgroot}/system/app/$(basename $f)"
done

print "Clean files..."
rm -rf $app_list

print "Adding files..."
cp -R ./system/app/* ${imgroot}/system/app/ || abort "Failed copy apps"
#mkdir_symlink

print "Setting correct permissions..."
for f in $app_list; do
    print "Fixing permission: $f"
    setperm 0755 0644 $f
    rmcache $f
done
#do_symlink

print "Fixing build.prop for MiPay..."
setprop "ro.se.type" "eSE,HCE,UICC" || abort "Failed to patch build.prop"
setprop "ro.telephony.default_network" "22,22"
setprop "ro.miui.region" "CN"
setprop "ro.miui.wifi.region" "CN"
setprop "ro.product.locale" "zh-CN"
setprop "ro.product.locale.language" "zh"
setprop "ro.product.locale.region" "CN"

sed -i '/Berlin/d' "$default_prop"

umount /system
umount_mntpoint /system
cleanup
print "Finished!"
